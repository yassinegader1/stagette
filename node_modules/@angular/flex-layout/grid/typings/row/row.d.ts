/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';
/**
 * 'grid-row' CSS Grid styling directive
 * Configures the name or position of an element within the grid
 * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26
 */
import * as ɵngcc0 from '@angular/core';
export declare class GridRowDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {
    align: string;
    alignXs: string;
    alignSm: string;
    alignMd: string;
    alignLg: string;
    alignXl: string;
    alignGtXs: string;
    alignGtSm: string;
    alignGtMd: string;
    alignGtLg: string;
    alignLtSm: string;
    alignLtMd: string;
    alignLtLg: string;
    alignLtXl: string;
    constructor(monitor: MediaMonitor, elRef: ElementRef, styleUtils: StyleUtils);
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ngOnInit(): void;
    protected _updateWithValue(value?: string): void;
    protected _buildCSS(value?: string): {
        'grid-row': string;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridRowDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GridRowDirective, "  [gdRow],  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]", never, { "align": "gdRow"; "alignXs": "gdRow.xs"; "alignSm": "gdRow.sm"; "alignMd": "gdRow.md"; "alignLg": "gdRow.lg"; "alignXl": "gdRow.xl"; "alignGtXs": "gdRow.gt-xs"; "alignGtSm": "gdRow.gt-sm"; "alignGtMd": "gdRow.gt-md"; "alignGtLg": "gdRow.gt-lg"; "alignLtSm": "gdRow.lt-sm"; "alignLtMd": "gdRow.lt-md"; "alignLtLg": "gdRow.lt-lg"; "alignLtXl": "gdRow.lt-xl"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LmQudHMiLCJzb3VyY2VzIjpbInJvdy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7IEVsZW1lbnRSZWYsIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VEaXJlY3RpdmUsIE1lZGlhTW9uaXRvciwgU3R5bGVVdGlscyB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0L2NvcmUnO1xuLyoqXG4gKiAnZ3JpZC1yb3cnIENTUyBHcmlkIHN0eWxpbmcgZGlyZWN0aXZlXG4gKiBDb25maWd1cmVzIHRoZSBuYW1lIG9yIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgd2l0aGluIHRoZSBncmlkXG4gKiBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL2NvbXBsZXRlLWd1aWRlLWdyaWQvI2FydGljbGUtaGVhZGVyLWlkLTI2XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdyaWRSb3dEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgYWxpZ246IHN0cmluZztcbiAgICBhbGlnblhzOiBzdHJpbmc7XG4gICAgYWxpZ25TbTogc3RyaW5nO1xuICAgIGFsaWduTWQ6IHN0cmluZztcbiAgICBhbGlnbkxnOiBzdHJpbmc7XG4gICAgYWxpZ25YbDogc3RyaW5nO1xuICAgIGFsaWduR3RYczogc3RyaW5nO1xuICAgIGFsaWduR3RTbTogc3RyaW5nO1xuICAgIGFsaWduR3RNZDogc3RyaW5nO1xuICAgIGFsaWduR3RMZzogc3RyaW5nO1xuICAgIGFsaWduTHRTbTogc3RyaW5nO1xuICAgIGFsaWduTHRNZDogc3RyaW5nO1xuICAgIGFsaWduTHRMZzogc3RyaW5nO1xuICAgIGFsaWduTHRYbDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKG1vbml0b3I6IE1lZGlhTW9uaXRvciwgZWxSZWY6IEVsZW1lbnRSZWYsIHN0eWxlVXRpbHM6IFN0eWxlVXRpbHMpO1xuICAgIC8qKlxuICAgICAqIEZvciBASW5wdXQgY2hhbmdlcyBvbiB0aGUgY3VycmVudCBtcSBhY3RpdmF0aW9uIHByb3BlcnR5LCBzZWUgb25NZWRpYVF1ZXJ5Q2hhbmdlcygpXG4gICAgICovXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQWZ0ZXIgdGhlIGluaXRpYWwgb25DaGFuZ2VzLCBidWlsZCBhbiBtcUFjdGl2YXRpb24gb2JqZWN0IHRoYXQgYnJpZGdlc1xuICAgICAqIG1xbCBjaGFuZ2UgZXZlbnRzIHRvIG9uTWVkaWFRdWVyeUNoYW5nZSBoYW5kbGVyc1xuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIF91cGRhdGVXaXRoVmFsdWUodmFsdWU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBfYnVpbGRDU1ModmFsdWU/OiBzdHJpbmcpOiB7XG4gICAgICAgICdncmlkLXJvdyc6IHN0cmluZztcbiAgICB9O1xufVxuIl19