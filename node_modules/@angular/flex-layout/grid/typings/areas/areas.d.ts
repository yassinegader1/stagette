/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';
/**
 * 'grid-template-areas' CSS Grid styling directive
 * Configures the names of elements within the grid
 * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14
 */
import * as ɵngcc0 from '@angular/core';
export declare class GridAreasDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {
    align: string;
    alignXs: string;
    alignSm: string;
    alignMd: string;
    alignLg: string;
    alignXl: string;
    alignGtXs: string;
    alignGtSm: string;
    alignGtMd: string;
    alignGtLg: string;
    alignLtSm: string;
    alignLtMd: string;
    alignLtLg: string;
    alignLtXl: string;
    inline: string;
    constructor(monitor: MediaMonitor, elRef: ElementRef, styleUtils: StyleUtils);
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ngOnInit(): void;
    protected _updateWithValue(value?: string): void;
    protected _buildCSS(value?: string): {
        'display': string;
        'grid-template-areas': string;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridAreasDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GridAreasDirective, "  [gdAreas],  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]", never, { "align": "gdAreas"; "alignXs": "gdAreas.xs"; "alignSm": "gdAreas.sm"; "alignMd": "gdAreas.md"; "alignLg": "gdAreas.lg"; "alignXl": "gdAreas.xl"; "alignGtXs": "gdAreas.gt-xs"; "alignGtSm": "gdAreas.gt-sm"; "alignGtMd": "gdAreas.gt-md"; "alignGtLg": "gdAreas.gt-lg"; "alignLtSm": "gdAreas.lt-sm"; "alignLtMd": "gdAreas.lt-md"; "alignLtLg": "gdAreas.lt-lg"; "alignLtXl": "gdAreas.lt-xl"; "inline": "gdInline"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJlYXMuZC50cyIsInNvdXJjZXMiOlsiYXJlYXMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZURpcmVjdGl2ZSwgTWVkaWFNb25pdG9yLCBTdHlsZVV0aWxzIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQvY29yZSc7XG4vKipcbiAqICdncmlkLXRlbXBsYXRlLWFyZWFzJyBDU1MgR3JpZCBzdHlsaW5nIGRpcmVjdGl2ZVxuICogQ29uZmlndXJlcyB0aGUgbmFtZXMgb2YgZWxlbWVudHMgd2l0aGluIHRoZSBncmlkXG4gKiBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL2NvbXBsZXRlLWd1aWRlLWdyaWQvI2FydGljbGUtaGVhZGVyLWlkLTE0XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdyaWRBcmVhc0RpcmVjdGl2ZSBleHRlbmRzIEJhc2VEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBhbGlnbjogc3RyaW5nO1xuICAgIGFsaWduWHM6IHN0cmluZztcbiAgICBhbGlnblNtOiBzdHJpbmc7XG4gICAgYWxpZ25NZDogc3RyaW5nO1xuICAgIGFsaWduTGc6IHN0cmluZztcbiAgICBhbGlnblhsOiBzdHJpbmc7XG4gICAgYWxpZ25HdFhzOiBzdHJpbmc7XG4gICAgYWxpZ25HdFNtOiBzdHJpbmc7XG4gICAgYWxpZ25HdE1kOiBzdHJpbmc7XG4gICAgYWxpZ25HdExnOiBzdHJpbmc7XG4gICAgYWxpZ25MdFNtOiBzdHJpbmc7XG4gICAgYWxpZ25MdE1kOiBzdHJpbmc7XG4gICAgYWxpZ25MdExnOiBzdHJpbmc7XG4gICAgYWxpZ25MdFhsOiBzdHJpbmc7XG4gICAgaW5saW5lOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IobW9uaXRvcjogTWVkaWFNb25pdG9yLCBlbFJlZjogRWxlbWVudFJlZiwgc3R5bGVVdGlsczogU3R5bGVVdGlscyk7XG4gICAgLyoqXG4gICAgICogRm9yIEBJbnB1dCBjaGFuZ2VzIG9uIHRoZSBjdXJyZW50IG1xIGFjdGl2YXRpb24gcHJvcGVydHksIHNlZSBvbk1lZGlhUXVlcnlDaGFuZ2VzKClcbiAgICAgKi9cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBZnRlciB0aGUgaW5pdGlhbCBvbkNoYW5nZXMsIGJ1aWxkIGFuIG1xQWN0aXZhdGlvbiBvYmplY3QgdGhhdCBicmlkZ2VzXG4gICAgICogbXFsIGNoYW5nZSBldmVudHMgdG8gb25NZWRpYVF1ZXJ5Q2hhbmdlIGhhbmRsZXJzXG4gICAgICovXG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgX3VwZGF0ZVdpdGhWYWx1ZSh2YWx1ZT86IHN0cmluZyk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIF9idWlsZENTUyh2YWx1ZT86IHN0cmluZyk6IHtcbiAgICAgICAgJ2Rpc3BsYXknOiBzdHJpbmc7XG4gICAgICAgICdncmlkLXRlbXBsYXRlLWFyZWFzJzogc3RyaW5nO1xuICAgIH07XG59XG4iXX0=