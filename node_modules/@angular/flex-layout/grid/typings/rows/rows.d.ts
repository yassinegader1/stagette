/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';
/**
 * 'grid-template-rows' CSS Grid styling directive
 * Configures the sizing for the rows in the grid
 * Syntax: <row value> [auto]
 * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13
 */
import * as ɵngcc0 from '@angular/core';
export declare class GridRowsDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {
    align: string;
    alignXs: string;
    alignSm: string;
    alignMd: string;
    alignLg: string;
    alignXl: string;
    alignGtXs: string;
    alignGtSm: string;
    alignGtMd: string;
    alignGtLg: string;
    alignLtSm: string;
    alignLtMd: string;
    alignLtLg: string;
    alignLtXl: string;
    inline: string;
    constructor(monitor: MediaMonitor, elRef: ElementRef, styleUtils: StyleUtils);
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ngOnInit(): void;
    protected _updateWithValue(value?: string): void;
    protected _buildCSS(value?: string): {
        'display': string;
        'grid-auto-rows': string;
        'grid-template-rows': string;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridRowsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GridRowsDirective, "  [gdRows],  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]", never, { "align": "gdRows"; "alignXs": "gdRows.xs"; "alignSm": "gdRows.sm"; "alignMd": "gdRows.md"; "alignLg": "gdRows.lg"; "alignXl": "gdRows.xl"; "alignGtXs": "gdRows.gt-xs"; "alignGtSm": "gdRows.gt-sm"; "alignGtMd": "gdRows.gt-md"; "alignGtLg": "gdRows.gt-lg"; "alignLtSm": "gdRows.lt-sm"; "alignLtMd": "gdRows.lt-md"; "alignLtLg": "gdRows.lt-lg"; "alignLtXl": "gdRows.lt-xl"; "inline": "gdInline"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93cy5kLnRzIiwic291cmNlcyI6WyJyb3dzLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlRGlyZWN0aXZlLCBNZWRpYU1vbml0b3IsIFN0eWxlVXRpbHMgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dC9jb3JlJztcbi8qKlxuICogJ2dyaWQtdGVtcGxhdGUtcm93cycgQ1NTIEdyaWQgc3R5bGluZyBkaXJlY3RpdmVcbiAqIENvbmZpZ3VyZXMgdGhlIHNpemluZyBmb3IgdGhlIHJvd3MgaW4gdGhlIGdyaWRcbiAqIFN5bnRheDogPHJvdyB2YWx1ZT4gW2F1dG9dXG4gKiBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL2NvbXBsZXRlLWd1aWRlLWdyaWQvI2FydGljbGUtaGVhZGVyLWlkLTEzXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdyaWRSb3dzRGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIGFsaWduOiBzdHJpbmc7XG4gICAgYWxpZ25Yczogc3RyaW5nO1xuICAgIGFsaWduU206IHN0cmluZztcbiAgICBhbGlnbk1kOiBzdHJpbmc7XG4gICAgYWxpZ25MZzogc3RyaW5nO1xuICAgIGFsaWduWGw6IHN0cmluZztcbiAgICBhbGlnbkd0WHM6IHN0cmluZztcbiAgICBhbGlnbkd0U206IHN0cmluZztcbiAgICBhbGlnbkd0TWQ6IHN0cmluZztcbiAgICBhbGlnbkd0TGc6IHN0cmluZztcbiAgICBhbGlnbkx0U206IHN0cmluZztcbiAgICBhbGlnbkx0TWQ6IHN0cmluZztcbiAgICBhbGlnbkx0TGc6IHN0cmluZztcbiAgICBhbGlnbkx0WGw6IHN0cmluZztcbiAgICBpbmxpbmU6IHN0cmluZztcbiAgICBjb25zdHJ1Y3Rvcihtb25pdG9yOiBNZWRpYU1vbml0b3IsIGVsUmVmOiBFbGVtZW50UmVmLCBzdHlsZVV0aWxzOiBTdHlsZVV0aWxzKTtcbiAgICAvKipcbiAgICAgKiBGb3IgQElucHV0IGNoYW5nZXMgb24gdGhlIGN1cnJlbnQgbXEgYWN0aXZhdGlvbiBwcm9wZXJ0eSwgc2VlIG9uTWVkaWFRdWVyeUNoYW5nZXMoKVxuICAgICAqL1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEFmdGVyIHRoZSBpbml0aWFsIG9uQ2hhbmdlcywgYnVpbGQgYW4gbXFBY3RpdmF0aW9uIG9iamVjdCB0aGF0IGJyaWRnZXNcbiAgICAgKiBtcWwgY2hhbmdlIGV2ZW50cyB0byBvbk1lZGlhUXVlcnlDaGFuZ2UgaGFuZGxlcnNcbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBfdXBkYXRlV2l0aFZhbHVlKHZhbHVlPzogc3RyaW5nKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgX2J1aWxkQ1NTKHZhbHVlPzogc3RyaW5nKToge1xuICAgICAgICAnZGlzcGxheSc6IHN0cmluZztcbiAgICAgICAgJ2dyaWQtYXV0by1yb3dzJzogc3RyaW5nO1xuICAgICAgICAnZ3JpZC10ZW1wbGF0ZS1yb3dzJzogc3RyaW5nO1xuICAgIH07XG59XG4iXX0=