/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';
import { Subscription } from 'rxjs';
import { Layout, LayoutDirective } from '../layout/layout';
/**
 * 'layout-align' flexbox styling directive
 *  Defines positioning of child elements along main and cross axis in a layout container
 *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs
 *
 *  @see https://css-tricks.com/almanac/properties/j/justify-content/
 *  @see https://css-tricks.com/almanac/properties/a/align-items/
 *  @see https://css-tricks.com/almanac/properties/a/align-content/
 */
import * as ɵngcc0 from '@angular/core';
export declare class LayoutAlignDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {
    protected _layout: string;
    protected _layoutWatcher?: Subscription;
    align: string;
    alignXs: string;
    alignSm: string;
    alignMd: string;
    alignLg: string;
    alignXl: string;
    alignGtXs: string;
    alignGtSm: string;
    alignGtMd: string;
    alignGtLg: string;
    alignLtSm: string;
    alignLtMd: string;
    alignLtLg: string;
    alignLtXl: string;
    constructor(monitor: MediaMonitor, elRef: ElementRef, container: LayoutDirective, styleUtils: StyleUtils);
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     *
     */
    protected _updateWithValue(value?: string): void;
    /**
     * Cache the parent container 'flex-direction' and update the 'flex' styles
     */
    protected _onLayoutChange(layout: Layout): void;
    protected _buildCSS(align?: string): any;
    /**
     * Update container element to 'stretch' as needed...
     * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'
     */
    protected _allowStretching(align?: string, layout?: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LayoutAlignDirective, [null, null, { optional: true; self: true; }, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LayoutAlignDirective, "  [fxLayoutAlign],  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", never, { "align": "fxLayoutAlign"; "alignXs": "fxLayoutAlign.xs"; "alignSm": "fxLayoutAlign.sm"; "alignMd": "fxLayoutAlign.md"; "alignLg": "fxLayoutAlign.lg"; "alignXl": "fxLayoutAlign.xl"; "alignGtXs": "fxLayoutAlign.gt-xs"; "alignGtSm": "fxLayoutAlign.gt-sm"; "alignGtMd": "fxLayoutAlign.gt-md"; "alignGtLg": "fxLayoutAlign.gt-lg"; "alignLtSm": "fxLayoutAlign.lt-sm"; "alignLtMd": "fxLayoutAlign.lt-md"; "alignLtLg": "fxLayoutAlign.lt-lg"; "alignLtXl": "fxLayoutAlign.lt-xl"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWFsaWduLmQudHMiLCJzb3VyY2VzIjpbImxheW91dC1hbGlnbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZURpcmVjdGl2ZSwgTWVkaWFNb25pdG9yLCBTdHlsZVV0aWxzIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQvY29yZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IExheW91dCwgTGF5b3V0RGlyZWN0aXZlIH0gZnJvbSAnLi4vbGF5b3V0L2xheW91dCc7XG4vKipcbiAqICdsYXlvdXQtYWxpZ24nIGZsZXhib3ggc3R5bGluZyBkaXJlY3RpdmVcbiAqICBEZWZpbmVzIHBvc2l0aW9uaW5nIG9mIGNoaWxkIGVsZW1lbnRzIGFsb25nIG1haW4gYW5kIGNyb3NzIGF4aXMgaW4gYSBsYXlvdXQgY29udGFpbmVyXG4gKiAgT3B0aW9uYWwgdmFsdWVzOiB7bWFpbi1heGlzfSB2YWx1ZXMgb3Ige21haW4tYXhpcyBjcm9zcy1heGlzfSB2YWx1ZSBwYWlyc1xuICpcbiAqICBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYWxtYW5hYy9wcm9wZXJ0aWVzL2ovanVzdGlmeS1jb250ZW50L1xuICogIEBzZWUgaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3Byb3BlcnRpZXMvYS9hbGlnbi1pdGVtcy9cbiAqICBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYWxtYW5hYy9wcm9wZXJ0aWVzL2EvYWxpZ24tY29udGVudC9cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTGF5b3V0QWxpZ25EaXJlY3RpdmUgZXh0ZW5kcyBCYXNlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIF9sYXlvdXQ6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgX2xheW91dFdhdGNoZXI/OiBTdWJzY3JpcHRpb247XG4gICAgYWxpZ246IHN0cmluZztcbiAgICBhbGlnblhzOiBzdHJpbmc7XG4gICAgYWxpZ25TbTogc3RyaW5nO1xuICAgIGFsaWduTWQ6IHN0cmluZztcbiAgICBhbGlnbkxnOiBzdHJpbmc7XG4gICAgYWxpZ25YbDogc3RyaW5nO1xuICAgIGFsaWduR3RYczogc3RyaW5nO1xuICAgIGFsaWduR3RTbTogc3RyaW5nO1xuICAgIGFsaWduR3RNZDogc3RyaW5nO1xuICAgIGFsaWduR3RMZzogc3RyaW5nO1xuICAgIGFsaWduTHRTbTogc3RyaW5nO1xuICAgIGFsaWduTHRNZDogc3RyaW5nO1xuICAgIGFsaWduTHRMZzogc3RyaW5nO1xuICAgIGFsaWduTHRYbDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKG1vbml0b3I6IE1lZGlhTW9uaXRvciwgZWxSZWY6IEVsZW1lbnRSZWYsIGNvbnRhaW5lcjogTGF5b3V0RGlyZWN0aXZlLCBzdHlsZVV0aWxzOiBTdHlsZVV0aWxzKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBZnRlciB0aGUgaW5pdGlhbCBvbkNoYW5nZXMsIGJ1aWxkIGFuIG1xQWN0aXZhdGlvbiBvYmplY3QgdGhhdCBicmlkZ2VzXG4gICAgICogbXFsIGNoYW5nZSBldmVudHMgdG8gb25NZWRpYVF1ZXJ5Q2hhbmdlIGhhbmRsZXJzXG4gICAgICovXG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgcHJvdGVjdGVkIF91cGRhdGVXaXRoVmFsdWUodmFsdWU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIENhY2hlIHRoZSBwYXJlbnQgY29udGFpbmVyICdmbGV4LWRpcmVjdGlvbicgYW5kIHVwZGF0ZSB0aGUgJ2ZsZXgnIHN0eWxlc1xuICAgICAqL1xuICAgIHByb3RlY3RlZCBfb25MYXlvdXRDaGFuZ2UobGF5b3V0OiBMYXlvdXQpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBfYnVpbGRDU1MoYWxpZ24/OiBzdHJpbmcpOiBhbnk7XG4gICAgLyoqXG4gICAgICogVXBkYXRlIGNvbnRhaW5lciBlbGVtZW50IHRvICdzdHJldGNoJyBhcyBuZWVkZWQuLi5cbiAgICAgKiBOT1RFOiB0aGlzIGlzIG9ubHkgZG9uZSBpZiB0aGUgY3Jvc3NBeGlzIGlzIGV4cGxpY2l0bHkgc2V0IHRvICdzdHJldGNoJ1xuICAgICAqL1xuICAgIHByb3RlY3RlZCBfYWxsb3dTdHJldGNoaW5nKGFsaWduPzogc3RyaW5nLCBsYXlvdXQ/OiBzdHJpbmcpOiB2b2lkO1xufVxuIl19