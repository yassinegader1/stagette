{"version":3,"file":"scrolling.js","sources":["../../../src/cdk/scrolling/scroll-dispatcher.ts","../../../src/cdk/scrolling/scrollable.ts","../../../src/cdk/scrolling/viewport-ruler.ts","../../../src/cdk/scrolling/scrolling-module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ElementRef,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {fromEvent, of as observableOf, Subject, Subscription, Observable} from 'rxjs';\nimport {auditTime, filter} from 'rxjs/operators';\nimport {CdkScrollable} from './scrollable';\n\n\n/** Time in ms to throttle the scrolling events by default. */\nexport const DEFAULT_SCROLL_TIME = 20;\n\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollDispatcher implements OnDestroy {\n  constructor(private _ngZone: NgZone, private _platform: Platform) { }\n\n  /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n  private _scrolled = new Subject<CdkScrollable|void>();\n\n  /** Keeps track of the global `scroll` and `resize` subscriptions. */\n  _globalSubscription: Subscription | null = null;\n\n  /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n  private _scrolledCount = 0;\n\n  /**\n   * Map of all the scrollable references that are registered with the service and their\n   * scroll event subscriptions.\n   */\n  scrollContainers: Map<CdkScrollable, Subscription> = new Map();\n\n  /**\n   * Registers a scrollable instance with the service and listens for its scrolled events. When the\n   * scrollable is scrolled, the service emits the event to its scrolled observable.\n   * @param scrollable Scrollable instance to be registered.\n   */\n  register(scrollable: CdkScrollable): void {\n    const scrollSubscription = scrollable.elementScrolled()\n        .subscribe(() => this._scrolled.next(scrollable));\n\n    this.scrollContainers.set(scrollable, scrollSubscription);\n  }\n\n  /**\n   * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n   * @param scrollable Scrollable instance to be deregistered.\n   */\n  deregister(scrollable: CdkScrollable): void {\n    const scrollableReference = this.scrollContainers.get(scrollable);\n\n    if (scrollableReference) {\n      scrollableReference.unsubscribe();\n      this.scrollContainers.delete(scrollable);\n    }\n  }\n\n  /**\n   * Returns an observable that emits an event whenever any of the registered Scrollable\n   * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n   * to override the default \"throttle\" time.\n   *\n   * **Note:** in order to avoid hitting change detection for every scroll event,\n   * all of the events emitted from this stream will be run outside the Angular zone.\n   * If you need to update any data bindings as a result of a scroll event, you have\n   * to run the callback using `NgZone.run`.\n   */\n  scrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME): Observable<CdkScrollable|void> {\n    return this._platform.isBrowser ? Observable.create(observer => {\n      if (!this._globalSubscription) {\n        this._addGlobalListener();\n      }\n\n      // In the case of a 0ms delay, use an observable without auditTime\n      // since it does add a perceptible delay in processing overhead.\n      const subscription = auditTimeInMs > 0 ?\n        this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n        this._scrolled.subscribe(observer);\n\n      this._scrolledCount++;\n\n      return () => {\n        subscription.unsubscribe();\n        this._scrolledCount--;\n\n        if (!this._scrolledCount) {\n          this._removeGlobalListener();\n        }\n      };\n    }) : observableOf<void>();\n  }\n\n  ngOnDestroy() {\n    this._removeGlobalListener();\n    this.scrollContainers.forEach((_, container) => this.deregister(container));\n    this._scrolled.complete();\n  }\n\n  /**\n   * Returns an observable that emits whenever any of the\n   * scrollable ancestors of an element are scrolled.\n   * @param elementRef Element whose ancestors to listen for.\n   * @param auditTimeInMs Time to throttle the scroll events.\n   */\n  ancestorScrolled(elementRef: ElementRef, auditTimeInMs?: number): Observable<CdkScrollable|void> {\n    const ancestors = this.getAncestorScrollContainers(elementRef);\n\n    return this.scrolled(auditTimeInMs).pipe(filter(target => {\n      return !target || ancestors.indexOf(target) > -1;\n    }));\n  }\n\n  /** Returns all registered Scrollables that contain the provided element. */\n  getAncestorScrollContainers(elementRef: ElementRef): CdkScrollable[] {\n    const scrollingContainers: CdkScrollable[] = [];\n\n    this.scrollContainers.forEach((_subscription: Subscription, scrollable: CdkScrollable) => {\n      if (this._scrollableContainsElement(scrollable, elementRef)) {\n        scrollingContainers.push(scrollable);\n      }\n    });\n\n    return scrollingContainers;\n  }\n\n  /** Returns true if the element is contained within the provided Scrollable. */\n  private _scrollableContainsElement(scrollable: CdkScrollable, elementRef: ElementRef): boolean {\n    let element: HTMLElement | null = elementRef.nativeElement;\n    let scrollableElement = scrollable.getElementRef().nativeElement;\n\n    // Traverse through the element parents until we reach null, checking if any of the elements\n    // are the scrollable's element.\n    do {\n      if (element == scrollableElement) { return true; }\n    } while (element = element!.parentElement);\n\n    return false;\n  }\n\n  /** Sets up the global scroll listeners. */\n  private _addGlobalListener() {\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n    });\n  }\n\n  /** Cleans up the global scroll listener. */\n  private _removeGlobalListener() {\n    if (this._globalSubscription) {\n      this._globalSubscription.unsubscribe();\n      this._globalSubscription = null;\n    }\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 7.0.0 */\nexport function SCROLL_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: ScrollDispatcher, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n\n/** @docs-private @deprecated @breaking-change 7.0.0 */\nexport const SCROLL_DISPATCHER_PROVIDER = {\n  // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n  provide: ScrollDispatcher,\n  deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n  useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, OnInit, OnDestroy, NgZone} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {ScrollDispatcher} from './scroll-dispatcher';\n\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\n@Directive({\n  selector: '[cdk-scrollable], [cdkScrollable]'\n})\nexport class CdkScrollable implements OnInit, OnDestroy {\n  private _elementScrolled: Subject<Event> = new Subject();\n  private _scrollListener = (event: Event) => this._elementScrolled.next(event);\n\n  constructor(private _elementRef: ElementRef,\n              private _scroll: ScrollDispatcher,\n              private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    this._ngZone.runOutsideAngular(() => {\n      this.getElementRef().nativeElement.addEventListener('scroll', this._scrollListener);\n    });\n\n    this._scroll.register(this);\n  }\n\n  ngOnDestroy() {\n    this._scroll.deregister(this);\n\n    if (this._scrollListener) {\n      this.getElementRef().nativeElement.removeEventListener('scroll', this._scrollListener);\n    }\n\n    this._elementScrolled.complete();\n  }\n\n  /**\n   * Returns observable that emits when a scroll event is fired on the host element.\n   */\n  elementScrolled(): Observable<any> {\n    return this._elementScrolled.asObservable();\n  }\n\n  getElementRef(): ElementRef {\n    return this._elementRef;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable, NgZone, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {merge, of as observableOf, fromEvent, Observable, Subscription} from 'rxjs';\nimport {auditTime} from 'rxjs/operators';\n\n/** Time in ms to throttle the resize events by default. */\nexport const DEFAULT_RESIZE_TIME = 20;\n\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class ViewportRuler implements OnDestroy {\n  /** Cached viewport dimensions. */\n  private _viewportSize: {width: number; height: number};\n\n  /** Stream of viewport change events. */\n  private _change: Observable<Event>;\n\n  /** Subscription to streams that invalidate the cached viewport dimensions. */\n  private _invalidateCache: Subscription;\n\n  constructor(private _platform: Platform, ngZone: NgZone) {\n    this._change = _platform.isBrowser ? ngZone.runOutsideAngular(() => {\n      return merge<Event>(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange'));\n    }) : observableOf();\n\n    this._invalidateCache = this.change().subscribe(() => this._updateViewportSize());\n  }\n\n  ngOnDestroy() {\n    this._invalidateCache.unsubscribe();\n  }\n\n  /** Returns the viewport's width and height. */\n  getViewportSize(): Readonly<{width: number, height: number}> {\n    if (!this._viewportSize) {\n      this._updateViewportSize();\n    }\n\n    const output = {width: this._viewportSize.width, height: this._viewportSize.height};\n\n    // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n    if (!this._platform.isBrowser) {\n      this._viewportSize = null!;\n    }\n\n    return output;\n  }\n\n  /** Gets a ClientRect for the viewport's bounds. */\n  getViewportRect(): ClientRect {\n    // Use the document element's bounding rect rather than the window scroll properties\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n    // We use the documentElement instead of the body because, by default (without a css reset)\n    // browsers typically give the document body an 8px margin, which is not included in\n    // getBoundingClientRect().\n    const scrollPosition = this.getViewportScrollPosition();\n    const {width, height} = this.getViewportSize();\n\n    return {\n      top: scrollPosition.top,\n      left: scrollPosition.left,\n      bottom: scrollPosition.top + height,\n      right: scrollPosition.left + width,\n      height,\n      width,\n    };\n  }\n\n  /** Gets the (top, left) scroll position of the viewport. */\n  getViewportScrollPosition() {\n    // While we can get a reference to the fake document\n    // during SSR, it doesn't have getBoundingClientRect.\n    if (!this._platform.isBrowser) {\n      return {top: 0, left: 0};\n    }\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const documentRect = document.documentElement.getBoundingClientRect();\n\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n                 document.documentElement.scrollTop || 0;\n\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n                  document.documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /**\n   * Returns a stream that emits whenever the size of the viewport changes.\n   * @param throttleTime Time in milliseconds to throttle the stream.\n   */\n  change(throttleTime: number = DEFAULT_RESIZE_TIME): Observable<Event> {\n    return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n  }\n\n  /** Updates the cached viewport size. */\n  private _updateViewportSize() {\n    this._viewportSize = this._platform.isBrowser ?\n        {width: window.innerWidth, height: window.innerHeight} :\n        {width: 0, height: 0};\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 7.0.0 */\nexport function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler: ViewportRuler,\n                                                platform: Platform,\n                                                ngZone: NgZone) {\n  return parentRuler || new ViewportRuler(platform, ngZone);\n}\n\n/** @docs-private @deprecated @breaking-change 7.0.0 */\nexport const VIEWPORT_RULER_PROVIDER = {\n  // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n  provide: ViewportRuler,\n  deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n  useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkScrollable} from './scrollable';\n\n@NgModule({\n  imports: [PlatformModule],\n  exports: [CdkScrollable],\n  declarations: [CdkScrollable],\n})\nexport class ScrollDispatchModule {}\n"]}