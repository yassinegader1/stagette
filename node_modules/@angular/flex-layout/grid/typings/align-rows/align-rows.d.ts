/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';
/**
 * 'row alignment' CSS Grid styling directive
 * Configures the alignment in the row direction
 * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18
 * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20
 */
import * as ɵngcc0 from '@angular/core';
export declare class GridAlignRowsDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {
    align: string;
    alignXs: string;
    alignSm: string;
    alignMd: string;
    alignLg: string;
    alignXl: string;
    alignGtXs: string;
    alignGtSm: string;
    alignGtMd: string;
    alignGtLg: string;
    alignLtSm: string;
    alignLtMd: string;
    alignLtLg: string;
    alignLtXl: string;
    inline: string;
    constructor(monitor: MediaMonitor, elRef: ElementRef, styleUtils: StyleUtils);
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ngOnInit(): void;
    protected _updateWithValue(value?: string): void;
    protected _buildCSS(align?: string): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridAlignRowsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GridAlignRowsDirective, "  [gdAlignRows],  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],  [gdAlignRows.gt-lg]", never, { "align": "gdAlignRows"; "alignXs": "gdAlignRows.xs"; "alignSm": "gdAlignRows.sm"; "alignMd": "gdAlignRows.md"; "alignLg": "gdAlignRows.lg"; "alignXl": "gdAlignRows.xl"; "alignGtXs": "gdAlignRows.gt-xs"; "alignGtSm": "gdAlignRows.gt-sm"; "alignGtMd": "gdAlignRows.gt-md"; "alignGtLg": "gdAlignRows.gt-lg"; "alignLtSm": "gdAlignRows.lt-sm"; "alignLtMd": "gdAlignRows.lt-md"; "alignLtLg": "gdAlignRows.lt-lg"; "alignLtXl": "gdAlignRows.lt-xl"; "inline": "gdInline"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxpZ24tcm93cy5kLnRzIiwic291cmNlcyI6WyJhbGlnbi1yb3dzLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZURpcmVjdGl2ZSwgTWVkaWFNb25pdG9yLCBTdHlsZVV0aWxzIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQvY29yZSc7XG4vKipcbiAqICdyb3cgYWxpZ25tZW50JyBDU1MgR3JpZCBzdHlsaW5nIGRpcmVjdGl2ZVxuICogQ29uZmlndXJlcyB0aGUgYWxpZ25tZW50IGluIHRoZSByb3cgZGlyZWN0aW9uXG4gKiBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL2NvbXBsZXRlLWd1aWRlLWdyaWQvI2FydGljbGUtaGVhZGVyLWlkLTE4XG4gKiBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvY3NzL2NvbXBsZXRlLWd1aWRlLWdyaWQvI2FydGljbGUtaGVhZGVyLWlkLTIwXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdyaWRBbGlnblJvd3NEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgYWxpZ246IHN0cmluZztcbiAgICBhbGlnblhzOiBzdHJpbmc7XG4gICAgYWxpZ25TbTogc3RyaW5nO1xuICAgIGFsaWduTWQ6IHN0cmluZztcbiAgICBhbGlnbkxnOiBzdHJpbmc7XG4gICAgYWxpZ25YbDogc3RyaW5nO1xuICAgIGFsaWduR3RYczogc3RyaW5nO1xuICAgIGFsaWduR3RTbTogc3RyaW5nO1xuICAgIGFsaWduR3RNZDogc3RyaW5nO1xuICAgIGFsaWduR3RMZzogc3RyaW5nO1xuICAgIGFsaWduTHRTbTogc3RyaW5nO1xuICAgIGFsaWduTHRNZDogc3RyaW5nO1xuICAgIGFsaWduTHRMZzogc3RyaW5nO1xuICAgIGFsaWduTHRYbDogc3RyaW5nO1xuICAgIGlubGluZTogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKG1vbml0b3I6IE1lZGlhTW9uaXRvciwgZWxSZWY6IEVsZW1lbnRSZWYsIHN0eWxlVXRpbHM6IFN0eWxlVXRpbHMpO1xuICAgIC8qKlxuICAgICAqIEZvciBASW5wdXQgY2hhbmdlcyBvbiB0aGUgY3VycmVudCBtcSBhY3RpdmF0aW9uIHByb3BlcnR5LCBzZWUgb25NZWRpYVF1ZXJ5Q2hhbmdlcygpXG4gICAgICovXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQWZ0ZXIgdGhlIGluaXRpYWwgb25DaGFuZ2VzLCBidWlsZCBhbiBtcUFjdGl2YXRpb24gb2JqZWN0IHRoYXQgYnJpZGdlc1xuICAgICAqIG1xbCBjaGFuZ2UgZXZlbnRzIHRvIG9uTWVkaWFRdWVyeUNoYW5nZSBoYW5kbGVyc1xuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIF91cGRhdGVXaXRoVmFsdWUodmFsdWU/OiBzdHJpbmcpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBfYnVpbGRDU1MoYWxpZ24/OiBzdHJpbmcpOiBhbnk7XG59XG4iXX0=