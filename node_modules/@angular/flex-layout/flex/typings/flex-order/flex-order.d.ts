/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout/core';
/**
 * 'flex-order' flexbox styling directive
 * Configures the positional ordering of the element in a sorted layout container
 * @see https://css-tricks.com/almanac/properties/o/order/
 */
import * as ɵngcc0 from '@angular/core';
export declare class FlexOrderDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {
    order: string;
    orderXs: string;
    orderSm: string;
    orderMd: string;
    orderLg: string;
    orderXl: string;
    orderGtXs: string;
    orderGtSm: string;
    orderGtMd: string;
    orderGtLg: string;
    orderLtSm: string;
    orderLtMd: string;
    orderLtLg: string;
    orderLtXl: string;
    constructor(monitor: MediaMonitor, elRef: ElementRef, styleUtils: StyleUtils);
    /**
     * For @Input changes on the current mq activation property, see onMediaQueryChanges()
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * After the initial onChanges, build an mqActivation object that bridges
     * mql change events to onMediaQueryChange handlers
     */
    ngOnInit(): void;
    protected _updateWithValue(value?: string): void;
    protected _buildCSS(value?: string): {
        order: number;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FlexOrderDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FlexOrderDirective, "  [fxFlexOrder],  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]", never, { "order": "fxFlexOrder"; "orderXs": "fxFlexOrder.xs"; "orderSm": "fxFlexOrder.sm"; "orderMd": "fxFlexOrder.md"; "orderLg": "fxFlexOrder.lg"; "orderXl": "fxFlexOrder.xl"; "orderGtXs": "fxFlexOrder.gt-xs"; "orderGtSm": "fxFlexOrder.gt-sm"; "orderGtMd": "fxFlexOrder.gt-md"; "orderGtLg": "fxFlexOrder.gt-lg"; "orderLtSm": "fxFlexOrder.lt-sm"; "orderLtMd": "fxFlexOrder.lt-md"; "orderLtLg": "fxFlexOrder.lt-lg"; "orderLtXl": "fxFlexOrder.lt-xl"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleC1vcmRlci5kLnRzIiwic291cmNlcyI6WyJmbGV4LW9yZGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZURpcmVjdGl2ZSwgTWVkaWFNb25pdG9yLCBTdHlsZVV0aWxzIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQvY29yZSc7XG4vKipcbiAqICdmbGV4LW9yZGVyJyBmbGV4Ym94IHN0eWxpbmcgZGlyZWN0aXZlXG4gKiBDb25maWd1cmVzIHRoZSBwb3NpdGlvbmFsIG9yZGVyaW5nIG9mIHRoZSBlbGVtZW50IGluIGEgc29ydGVkIGxheW91dCBjb250YWluZXJcbiAqIEBzZWUgaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3Byb3BlcnRpZXMvby9vcmRlci9cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmxleE9yZGVyRGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIG9yZGVyOiBzdHJpbmc7XG4gICAgb3JkZXJYczogc3RyaW5nO1xuICAgIG9yZGVyU206IHN0cmluZztcbiAgICBvcmRlck1kOiBzdHJpbmc7XG4gICAgb3JkZXJMZzogc3RyaW5nO1xuICAgIG9yZGVyWGw6IHN0cmluZztcbiAgICBvcmRlckd0WHM6IHN0cmluZztcbiAgICBvcmRlckd0U206IHN0cmluZztcbiAgICBvcmRlckd0TWQ6IHN0cmluZztcbiAgICBvcmRlckd0TGc6IHN0cmluZztcbiAgICBvcmRlckx0U206IHN0cmluZztcbiAgICBvcmRlckx0TWQ6IHN0cmluZztcbiAgICBvcmRlckx0TGc6IHN0cmluZztcbiAgICBvcmRlckx0WGw6IHN0cmluZztcbiAgICBjb25zdHJ1Y3Rvcihtb25pdG9yOiBNZWRpYU1vbml0b3IsIGVsUmVmOiBFbGVtZW50UmVmLCBzdHlsZVV0aWxzOiBTdHlsZVV0aWxzKTtcbiAgICAvKipcbiAgICAgKiBGb3IgQElucHV0IGNoYW5nZXMgb24gdGhlIGN1cnJlbnQgbXEgYWN0aXZhdGlvbiBwcm9wZXJ0eSwgc2VlIG9uTWVkaWFRdWVyeUNoYW5nZXMoKVxuICAgICAqL1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEFmdGVyIHRoZSBpbml0aWFsIG9uQ2hhbmdlcywgYnVpbGQgYW4gbXFBY3RpdmF0aW9uIG9iamVjdCB0aGF0IGJyaWRnZXNcbiAgICAgKiBtcWwgY2hhbmdlIGV2ZW50cyB0byBvbk1lZGlhUXVlcnlDaGFuZ2UgaGFuZGxlcnNcbiAgICAgKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBfdXBkYXRlV2l0aFZhbHVlKHZhbHVlPzogc3RyaW5nKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgX2J1aWxkQ1NTKHZhbHVlPzogc3RyaW5nKToge1xuICAgICAgICBvcmRlcjogbnVtYmVyO1xuICAgIH07XG59XG4iXX0=